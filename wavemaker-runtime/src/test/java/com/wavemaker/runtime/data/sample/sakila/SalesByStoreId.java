/*
 *  Copyright (C) 2009 WaveMaker Software, Inc.
 *
 *  This file is part of the WaveMaker Server Runtime.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package com.wavemaker.runtime.data.sample.sakila;

// Generated Jul 5, 2007 6:21:54 PM by Hibernate Tools 3.2.0.b9

import java.math.BigDecimal;

/**
 * SalesByStoreId generated by hbm2java
 */
@SuppressWarnings({ "serial" })
public class SalesByStoreId implements java.io.Serializable {

    private String store;

    private String manager;

    private BigDecimal totalSales;

    public SalesByStoreId() {
    }

    public SalesByStoreId(String store, String manager) {
        this.store = store;
        this.manager = manager;
    }

    public SalesByStoreId(String store, String manager, BigDecimal totalSales) {
        this.store = store;
        this.manager = manager;
        this.totalSales = totalSales;
    }

    public String getStore() {
        return this.store;
    }

    public void setStore(String store) {
        this.store = store;
    }

    public String getManager() {
        return this.manager;
    }

    public void setManager(String manager) {
        this.manager = manager;
    }

    public BigDecimal getTotalSales() {
        return this.totalSales;
    }

    public void setTotalSales(BigDecimal totalSales) {
        this.totalSales = totalSales;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (!(other instanceof SalesByStoreId)) {
            return false;
        }
        SalesByStoreId castOther = (SalesByStoreId) other;

        return (this.getStore() == castOther.getStore() || this.getStore() != null && castOther.getStore() != null
            && this.getStore().equals(castOther.getStore()))
            && (this.getManager() == castOther.getManager() || this.getManager() != null && castOther.getManager() != null
                && this.getManager().equals(castOther.getManager()))
            && (this.getTotalSales() == castOther.getTotalSales() || this.getTotalSales() != null && castOther.getTotalSales() != null
                && this.getTotalSales().equals(castOther.getTotalSales()));
    }

    @Override
    public int hashCode() {
        int result = 17;

        result = 37 * result + (getStore() == null ? 0 : this.getStore().hashCode());
        result = 37 * result + (getManager() == null ? 0 : this.getManager().hashCode());
        result = 37 * result + (getTotalSales() == null ? 0 : this.getTotalSales().hashCode());
        return result;
    }

}
